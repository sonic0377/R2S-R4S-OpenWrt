name: Openwrt 21.02 With Kernel-5.4

on:
  # push:
  #     branches:
  #       - master
  #     paths:
  #       - 'SWITCH'
  #schedule:
  #  - cron: '00 03 1 * *'
  watch:
    types: [started]

jobs:

  build:

    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@main
      - name: Show system
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          ulimit -a
      - name: Free disk space
        run: |
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E docker image prune -a -f
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
          [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Init build dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /etc/apt/sources.list.d
          sudo -E apt-get update -y
          sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
          wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
          sudo -E apt-get clean -y
          git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
          df -h
      - name: Prepare Sources
        id: prepare
        run: |
          sudo chown -R runner:runner /home/runner/work/R2S-R4S-OpenWrt
          latest_release="$(curl -s https://github.com/immortalwrt/immortalwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][0-9]/p' | sed -n 1p | sed 's/.tar.gz//g')"
          git clone -b ${latest_release} --depth 1 https://github.com/immortalwrt/immortalwrt.git openwrt
          echo "##[set-output name=latest_release;]$latest_release"
      - name: Prepare Package
        run: |
          cd openwrt
          #rm -f ../PATCHES/002-mod-turboacc-switch-bbr-support-to-bbr2.patch
          #mv ../PATCHES/100-mod-turboacc-switch-bbr-support-to-bbr2.patch ../PATCHES/002-mod-turboacc-switch-bbr-support-to-bbr2.patch
          # BBRv2
          #wget -qO- https://github.com/QiuSimons/YAOF/raw/21.02_EOL/PATCH/BBRv2/openwrt-kmod-bbr2.patch | patch -p1
          #wget -P target/linux/generic/hack-5.4 https://github.com/QiuSimons/YAOF/raw/21.02_EOL/PATCH/BBRv2/693-Add_BBRv2_congestion_control_for_Linux_TCP.patch
          cp -f ../SCRIPTS/prepare_package.sh ./prepare_package.sh
          sed -i "/luci-app-upnp/d" prepare_package.sh
          /bin/bash prepare_package.sh
      - name: Make Config
        run: |
          cd openwrt
          mv ../SEED/config-2102.seed .config
          sed -i '/CONFIG_TARGET_ROOTFS_SQUASHFS/d' .config
          make defconfig
      - name: Make Download
        run: |
          df -h
          cd openwrt
          make download -j50
      - name: Compile Openwrt
        id: compileopenwrt
        continue-on-error: true
        run: |
          df -h
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
          echo $?
      - name: If Error
        if: steps.compileopenwrt.outcome == 'failure'
        run: |
          cat openwrt/.config
          echo '================================================================'
          cd openwrt && make -j1 V=s
      - name: Print Disk Space After
        run: df -h
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/rockchip/armv8/*sysupgrade.img* ./artifact/
          cd ./artifact/
          gzip -d *.gz && exit 0
          gzip *.img
          releaseTag=${{ steps.prepare.outputs.latest_release }}
          sha256sum *.gz | tee R2S-R4S-OPoA-$releaseTag-$(date +%Y-%m-%d).sha256sum
          mv *r2s*ext4* ./R2S-OPoA-$releaseTag-$(date +%Y-%m-%d)-ext4.img.gz
          mv *r4s*ext4* ./R4S-OPoA-$releaseTag-$(date +%Y-%m-%d)-ext4.img.gz
          mv *r2s*squashfs* ./R2S-OPoA-$releaseTag-$(date +%Y-%m-%d)-sfs.img.gz
          mv *r4s*squashfs* ./R4S-OPoA-$releaseTag-$(date +%Y-%m-%d)-sfs.img.gz
          cd ../openwrt
          cp .config ../artifact/config-full.seed
          ./scripts/diffconfig.sh > ../artifact/config-diff.seed
          release_tag="R2S-R4S-OPoA-$releaseTag-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ steps.assemble_artifact.outputs.release_tag }}-artifact
          path: ./artifact/
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.9.0
        with:
          name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM
          allowUpdates: true
          tag: ${{ steps.assemble_artifact.outputs.release_tag }}
          commit: master
          replacesArtifacts: true
          draft: false
          prerelease: false
          token: ${{ secrets.workflow_token }}
          artifacts: ./artifact/*.gz,./artifact/*.seed,./artifact/*.sha256sum
